version: '2'
services:
    # elasticsearch:
    #   image: docker.elastic.co/elasticsearch/elasticsearch:7.16.0
    #   ports:
    #     - "9200:9200"
    #     - "9300:9300"
    #   restart: unless-stopped
    #   environment:
    #     - discovery.type=single-node
    #     - node.name=elasticsearch
    #     - cluster.name=es-docker-cluster
    #     - bootstrap.memory_lock=true
    #     - xpack.security.enabled=false
    #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    #   ulimits:
    #     memlock:
    #       soft: -1
    #       hard: -1
    #     nofile:
    #       soft: 65536
    #       hard: 65536
    #   volumes:
    #     - ./elasticsearch/data:/usr/share/elasticsearch/data:rw
    # logstash:
    #   image: docker.elastic.co/logstash/logstash:7.16.0
    #   restart: unless-stopped
    #   volumes:
    #       - type: bind
    #         source: ./Backend/logstash/config/logstash.yml
    #         target: /usr/share/logstash/config/logstash.yml
    #         read_only: true
    #       - type: bind
    #         source: ./Backend/logstash/config/pipelines.yml
    #         target: /usr/share/logstash/config/pipelines.yml
    #         read_only: true
    #       - type: bind
    #         source: ./Backend/logstash/pipeline
    #         target: /usr/share/logstash/pipeline
    #         read_only: true
    #   ports:
    #       - "5000:5000"
    #       - "5001:5001"
    #       - "5002:5002"
    #       - "5003:5003"
    #       - "5004:5004"
    #       - "5005:5005"
    #       - "9600:9600"
    #   depends_on:
    #     - elasticsearch
    # kibana:
    #   image: docker.elastic.co/kibana/kibana:7.16.0
    #   ports:
    #     - "5601:5601"
    #   environment:
    #     ELASTICSEARCH_URL: http://elasticsearch:9200
    #     ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    #   depends_on:
    #     - elasticsearch
    mysql:
      image: mysql:latest
      ports:
        - "3307:3306"
      environment:
        MYSQL_ROOT_USER: root
        MYSQL_ROOT_PASSWORD: test
        MYSQL_DATABASE: catalog
    eureka-discovery-server:
      image: eureka-discovery-server:latest
      build:
        context: ./Backend/eureka-discovery-server
        dockerfile: Dockerfile
      ports:
        - "8761:8761"
      networks:
        - spring-cloud-network
    api-gateway-service:
      image: api-gateway-service:latest
      build:
        context: ./Backend/api-gateway-service
        dockerfile: Dockerfile
      restart: on-failure
      depends_on:
        - eureka-discovery-server
      environment:
        - JAVA_OPTS=
          -DEUREKA_SERVER=http://eureka-discovery-server:8761/eureka
      ports:
        - "8083:8083"
      networks:
        - spring-cloud-network
    reviews-service:
      image: reviews-service:latest
      build:
        context: ./Backend/reviews-service
        dockerfile: Dockerfile
      restart: on-failure
      depends_on:
        - eureka-discovery-server
        - api-gateway-service
      environment:
        - JAVA_OPTS=
          -DEUREKA_SERVER=http://eureka-discovery-server:8761/eureka
      ports:
        - "8081:8081"
      networks:
        - spring-cloud-network
    catalog-service:
      image: catalog-service:latest
      build:
        context: ./Backend/catalog-service
        dockerfile: Dockerfile
      restart: on-failure
      depends_on:
        - eureka-discovery-server
        - api-gateway-service
        - mysql
      environment:
        - JAVA_OPTS=
          -DEUREKA_SERVER=http://eureka-discovery-server:8761/eureka
        - SPRING_DATASOURCE_URL=jdbc:mysql://localhost:3306/catalog?useSSL=false
        - SPRING_DATASOURCE_USERNAME=root
        - SPRING_DATASOURCE_PASSWORD=password
      ports:
        - "8080:8080"
      networks:
        - spring-cloud-network
networks:
    spring-cloud-network:
        driver: bridge
# volumes:
#   elasticsearch:
